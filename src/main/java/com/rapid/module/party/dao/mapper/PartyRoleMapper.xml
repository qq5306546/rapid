<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.rapid.module.party.dao.PartyRoleDAO"> 
	<resultMap id="PartyRoleMap" type="com.rapid.module.party.model.PartyRole"> 
		<result property="partyId" column="party_id" /> 
		<result property="roleTypeId" column="role_type_id" /> 
		<result property="createStamp" column="create_stamp" /> 
		<result property="lastUpdateStamp" column="last_update_stamp" /> 
	</resultMap> 
	<sql id="allColumns">  
		party_id,role_type_id,create_stamp,last_update_stamp 
	</sql> 
	<sql id="dynamicWhere"> 
     <where> 
       <trim prefixOverrides="and"> 
		<if test="partyId != null" >and party_id = #{partyId}</if>
		<if test="roleTypeId != null" >and role_type_id = #{roleTypeId}</if>
		<if test="createStamp != null" >and create_stamp = #{createStamp}</if>
		<if test="lastUpdateStamp != null" >and last_update_stamp = #{lastUpdateStamp}</if>
       </trim> 
     </where> 
	</sql> 
	<!-- 通过复合条件查询 --> 
	<select id="select" parameterType="java.util.HashMap" resultMap="PartyRoleMap">  
		select <include refid="allColumns" />  
		from  party_role 
		<include refid="dynamicWhere" /> 
	</select> 

	<!-- 通过主键查询对象 --> 
	<select id="selectById" parameterType="java.lang.String" resultMap="PartyRoleMap">  
			select <include refid="allColumns" />  
			from  party_role 
			where party_id = #partyId#  
	</select> 

	<!-- 统计 --> 
	<select id="selectCount" parameterType="java.util.HashMap" resultClass="java.lang.Integer">  
		select count(1) 
		from  party_role 
		<include refid="dynamicWhere" /> 
	</select> 

	<!-- 新增对象 --> 
	<insert id="insert" parameterType="com.rapid.module.party.model.PartyRole">  
		insert into party_role 
		(  
			<include refid="allColumns" /> 
		)  
		values  
		(  
			#partyId#,#roleTypeId#,#createStamp#,#lastUpdateStamp# 
		)  
	</insert> 

	<!-- 修改对象 --> 
	<update id="update" parameterType="com.rapid.module.party.model.PartyRole">  
		update party_role 
		<set> 
			<if test="roleTypeId != null" >role_type_id = #{roleTypeId},</if> 
			<if test="createStamp != null" >create_stamp = #{createStamp},</if> 
			<if test="lastUpdateStamp != null" >last_update_stamp = #{lastUpdateStamp},</if> 
		</set>  
		where party_id = #partyId# 
	</update> 

	<!-- 通过主键删除对象 --> 
	<delete id="deleteById" parameterType="java.lang.String"> 
		delete from party_role 
		where party_id = #partyId# 
	</delete> 

</mapper> 
